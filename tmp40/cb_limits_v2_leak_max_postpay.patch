diff --git a/applications/crossbar/src/modules_v2/cb_limits_v2.erl b/applications/crossbar/src/modules_v2/cb_limits_v2.erl
index 1cc6f38..5308825 100644
--- a/applications/crossbar/src/modules_v2/cb_limits_v2.erl
+++ b/applications/crossbar/src/modules_v2/cb_limits_v2.erl
@@ -131,7 +131,7 @@ validate(Context) ->
 validate_limits(Context, ?HTTP_GET) ->
     load_limit(Context);
 validate_limits(Context, ?HTTP_POST) ->
-    cb_context:validate_request_data(<<"limits">>, Context, fun on_successful_validation/1).
+    cb_context:validate_request_data(<<"limits">>, cleanup_leaky_keys(Context), fun on_successful_validation/1).
 
 -spec post(cb_context:context()) -> cb_context:context().
 post(Context) ->
@@ -152,7 +152,38 @@ post(Context) ->
 %%--------------------------------------------------------------------
 -spec load_limit(cb_context:context()) -> cb_context:context().
 load_limit(Context) ->
-    maybe_handle_load_failure(crossbar_doc:load(?PVT_TYPE, Context, ?TYPE_CHECK_OPTION(?PVT_TYPE))).
+    leak_pvt_fields(crossbar_doc:load(?PVT_TYPE, Context, ?TYPE_CHECK_OPTION(?PVT_TYPE))).
+
+-spec leak_pvt_fields(cb_context:context()) -> cb_context:context().
+-spec leak_pvt_fields(cb_context:context(), crossbar_status()) -> cb_context:context().
+leak_pvt_fields(Context) ->
+    leak_pvt_fields(Context, cb_context:resp_status(Context)).
+
+leak_pvt_fields(Context, 'success') ->
+    Routines = [fun leak_pvt_allow_postpay/1
+               ,fun leak_pvt_max_postpay_amount/1
+               ],
+    cb_context:setters(Context, Routines);
+leak_pvt_fields(Context, _Status) ->
+    maybe_handle_load_failure(Context).
+
+-spec leak_pvt_allow_postpay(cb_context:context()) -> cb_context:context().
+leak_pvt_allow_postpay(Context) ->
+    cb_context:set_resp_data(Context
+                            ,kz_json:set_value(<<"allow_postpay">>
+                                              ,kz_json:is_true(<<"pvt_allow_postpay">>, cb_context:doc(Context), 'false')
+                                              ,cb_context:resp_data(Context)
+                                              )
+                            ).
+
+-spec leak_pvt_max_postpay_amount(cb_context:context()) -> cb_context:context().
+leak_pvt_max_postpay_amount(Context) ->
+    cb_context:set_resp_data(Context
+                            ,kz_json:set_value(<<"max_postpay_amount">>
+                                              ,abs(kz_json:get_number_value(<<"pvt_max_postpay_amount">>, cb_context:doc(Context), 0))
+                                              ,cb_context:resp_data(Context)
+                                              )
+                            ).
 
 %%--------------------------------------------------------------------
 %% @private
@@ -192,3 +223,18 @@ maybe_handle_load_failure(Context, 404) ->
                        ,{fun cb_context:set_doc/2, crossbar_doc:update_pvt_parameters(JObj, Context)}
                        ]);
 maybe_handle_load_failure(Context, _RespCode) -> Context.
+
+%%--------------------------------------------------------------------
+%% @private
+%% @doc
+%%
+%% @end
+%%--------------------------------------------------------------------
+-spec cleanup_leaky_keys(cb_context:context()) -> cb_context:context().
+cleanup_leaky_keys(Context) ->
+    RemoveKeys = [<<"allow_postpay">>
+                 ,<<"max_postpay_amount">>
+                 ],
+    ReqData = kz_json:delete_keys(RemoveKeys, cb_context:req_data(Context)),
+    cb_context:set_req_data(Context, ReqData).
+
